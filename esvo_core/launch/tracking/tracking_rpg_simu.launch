<launch>
	<rosparam param="/use_sim_time">true</rosparam>

	<!-- Time surfaces generation -->
	<node name="TimeSurface_left" pkg="esvo_time_surface" type="esvo_time_surface">
		<remap from="events" to="/cam0/events" />
		<remap from="image" to="/cam0/image_raw" />
		<remap from="camera_info" to="/cam0/camera_info" />
		<remap from="time_surface" to="/TS_left" />

		<rosparam command="load" file="$(find esvo_core)/cfg/time_surface/ts_parameters.yaml" />
	</node>

	<!-- Synchronize both Time Surfaces using the rosbag timer -->
	<node name="global_timer" pkg="rostopic" type="rostopic" args="pub -s -r 70 /sync std_msgs/Time 'now' ">
	<!-- Modify the rate according to the speed that the bag is played-->
	</node>

	<!-- Calibration folder -->
	<arg name="calibInfoDirStr" default="$(find esvo_core)/calib/rpg_simu"/>

	<!-- Tracking node -->
	<node name="Tracking" pkg="esvo_core" type="Tracking" output="screen" required="true">
		<remap from="time_surface_left" to="/TS_left" />
		<remap from="time_surface_right" to="/TS_right" />
		<remap from="stamped_pose" to="/tracking/pose_pub" />
		<remap from="gt_pose" to="/cam0/pose" />
		<remap from="events_left" to="/cam0/events" />
		<remap from="pointcloud" to="/publishMap/pointcloud_local" />

		<rosparam param="dvs_frame_id">"dvs"</rosparam>
		<rosparam param="world_frame_id">"map"</rosparam>
		<rosparam param="calibInfoDir" subst_value="true">$(arg calibInfoDirStr)</rosparam>

		<rosparam command="load" file="$(find esvo_core)/cfg/tracking/tracking_rpg_simu.yaml" />
	</node>

	<node name="publishMap" pkg="esvo_core" type="publishMap" output="screen" required="true">
		<remap from="time_surface_left" to="/TS_left" />
		<remap from="events_left" to="/cam0/events" />
		<rosparam param="dvs_frame_id">"dvs"</rosparam>
		<rosparam param="world_frame_id">"map"</rosparam>
		<rosparam command="load" file="$(find esvo_core)/cfg/tracking/tracking_rpg_simu.yaml" />
	</node>

	<!-- Visualization -->
	<!-- <node pkg="rqt_gui" type="rqt_gui" name="rqt_gui"
    args="-perspective-file $(find esvo_core)/esvo_system.perspective" />
	<node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find esvo_core)/esvo_system.rviz" /> -->
</launch>
